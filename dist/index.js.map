{"version":3,"file":"index.js","sources":["../src/LogDNAMethods.ts","../src/constants.ts","../node_modules/.pnpm/fast-safe-stringify@2.1.1/node_modules/fast-safe-stringify/index.js","../src/utils.ts","../src/validation.ts","../src/buffer-manager.ts","../node_modules/.pnpm/detect-browser@5.3.0/node_modules/detect-browser/es/index.js","../src/context-manager.ts","../src/session-manager.ts","../src/capture.ts","../src/plugins/logger.ts","../src/plugins/console.ts","../src/plugins/global-handler.ts","../src/plugin-manager.ts","../src/version.ts","../src/debug-info.ts","../src/init.ts","../src/plugins/metrics.ts","../src/plugins/ssn-filter.ts","../src/plugins/index.ts","../src/index.ts"],"sourcesContent":["import { LogDNABrowserOptions, Context, SessionId } from './logdna';\n\nexport class LogDNAMethods {}\n\nexport interface LogDNAMethods {\n  init(ingestionKey: string, options?: LogDNABrowserOptions): void;\n  config(ingestionKey: string, options?: LogDNABrowserOptions): void;\n  plugins: any;\n  addContext(context: Context): void;\n  setSessionId(id: SessionId): void;\n}\n","import { LogDNABrowserOptions } from './logdna';\n\nconst DEFAULT_INGESTION_URL = 'https://logs.mezmo.com/logs/ingest';\nconst LOG_LINE_FLUSH_TIMEOUT = 250; // ms\nconst FLUSH_BYTE_LIMIT = 60 * 1024; // Max chrome allows with fetch and keep alive is 64kb, we are making it smaller to account for headers and unknowns\nconst SAMPLE_RATE = 100;\n\nconst STARTING_BACK_OFF = 1000; // 1 sec\nconst MAX_BACK_OFF = 60000; // 60 sec\n\nconst MAX_FETCH_ERROR_RETRY = 30;\n\nconst DEFAULT_TAG = 'LogDNA-Browser';\n\nconst SESSION_SCORE_KEY = 'logdna::browser::sessionscore';\nconst SESSION_KEY = 'logdna::browser::sessionid';\n\nconst HOSTNAME_CHECK = new RegExp('^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\\\.)*' + '([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$');\n\nconst DEFAULT_CONFIG: LogDNABrowserOptions = {\n  url: DEFAULT_INGESTION_URL,\n  hostname: 'logdna-browser-logger',\n  flushInterval: LOG_LINE_FLUSH_TIMEOUT,\n  enableStacktrace: true,\n  sampleRate: SAMPLE_RATE,\n  tags: [],\n  app: '',\n  plugins: [],\n  console: true,\n  globalErrorHandlers: true,\n  debug: false,\n  disabled: false,\n  hooks: {\n    beforeSend: [],\n  },\n};\n\nexport {\n  DEFAULT_CONFIG,\n  DEFAULT_INGESTION_URL,\n  LOG_LINE_FLUSH_TIMEOUT,\n  FLUSH_BYTE_LIMIT,\n  HOSTNAME_CHECK,\n  SAMPLE_RATE,\n  MAX_FETCH_ERROR_RETRY,\n  STARTING_BACK_OFF,\n  MAX_BACK_OFF,\n  DEFAULT_TAG,\n  SESSION_SCORE_KEY,\n  SESSION_KEY,\n};\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","import safeStringify from 'fast-safe-stringify';\nimport { HOSTNAME_CHECK, DEFAULT_TAG, SESSION_SCORE_KEY } from './constants';\n\nimport { Tags } from './logdna';\n\nconst validateHostname = (hostname: string) => HOSTNAME_CHECK.test(hostname);\n\nconst parseTags = (tags: Tags = []) => {\n  if ((typeof tags !== 'string' && !Array.isArray(tags)) || (Array.isArray(tags) && tags.some(tag => typeof tag !== 'string'))) {\n    throw new Error(`LogDNA Browser Logger \\`tags\\` must be a string or an array of strings`);\n  }\n\n  if (typeof tags === 'string') {\n    tags = [tags];\n  }\n\n  return [DEFAULT_TAG, ...tags].filter(tag => tag !== '').join(',');\n};\n\nconst stringify = (obj: unknown) => safeStringify(obj);\n\nconst getStackTrace = () => {\n  const stack = new Error().stack || '';\n  const array = stack\n    .split('\\n')\n    .map(line => line.trim())\n    .filter(line => !line.includes('@logdna/browser'));\n  return array.join('\\n');\n};\n\nconst _randomBetween = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n/**\n * This implements exponential backoff with \"decorrelated jitter\" for use in\n * failing HTTP calls and their retries.  Although the HTTP calls shouldn't be in\n * contention with other clients, the jitter will help alleviate a flood\n * of connections to the server in the event LogDNA suddenly comes back\n * online after being unavailable.\n *\n * @see https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/\n *\n * @param   {Number} base The base sleep time to be used\n * @param   {Number} cap The maximum sleep time allowable in milliseconds\n * @param   {Number} lastSleep The last (or starting) sleep time used\n * @returns {Number} calculated sleep time\n */\nconst backOffWithJitter = (base: number, cap: number, lastSleep: number) => Math.min(cap, _randomBetween(base, lastSleep * 3));\n\nconst jsonByteSize = (obj: unknown) => {\n  const stringified = stringify(obj);\n  if (window.TextEncoder) {\n    return new TextEncoder().encode(stringified).length;\n  }\n\n  return new Blob([stringified]).size;\n};\n\nconst includeInSampleRate = (sampleRate: number = 100, sampleRateScore: number) => sampleRateScore <= sampleRate;\n\n// This will generate a session score and store it in session storage in case the\n// user refreshes a spa or is not an spa app.\nconst generateSampleRateScore = (): number => {\n  let score;\n  const hasSessionStorage = isBrowserStorageAvailable('sessionStorage');\n\n  if (hasSessionStorage) {\n    score = window.sessionStorage.getItem(SESSION_SCORE_KEY);\n    if (score && isNaN(+score)) score = null;\n  }\n\n  if (!score) {\n    score = Math.floor(Math.random() * 100) + 1;\n    hasSessionStorage && window.sessionStorage.setItem(SESSION_SCORE_KEY, `${score}`);\n  }\n\n  return +score;\n};\n\nconst isBrowserStorageAvailable = (storage: 'localStorage' | 'sessionStorage') => {\n  if (!window && !window[storage]) {\n    return false;\n  }\n  const testKey = 'test-key';\n  try {\n    window[storage].setItem(testKey, 'Test Data');\n    window[storage].removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst isFunction = (fn?: Function) => typeof fn === 'function';\n\nconst consoleMethods = ['log', 'error', 'debug', 'warn', 'info'];\nlet cachedConsole: any = consoleMethods.reduce((a: any, m: string) => ({ ...a, [m]: () => {} }), {});\nconst originalConsole: any = consoleMethods.reduce(\n  (a: any, m: string) => ({\n    ...a,\n    [m]: (...args: any) => {\n      cachedConsole[m](...args);\n    },\n  }),\n  {},\n);\n\n// This will delay the caching of the original instance of the console\n// until after logdna is enabled and initialized for use with SSR.\nconst cacheConsole = () => {\n  const { log, error, debug, warn, info } = window.console;\n  cachedConsole = { log, error, debug, warn, info };\n};\n\nexport default {\n  validateHostname,\n  parseTags,\n  stringify,\n  getStackTrace,\n  backOffWithJitter,\n  jsonByteSize,\n  includeInSampleRate,\n  generateSampleRateScore,\n  isBrowserStorageAvailable,\n  isFunction,\n  originalConsole,\n  cacheConsole,\n};\n","import utils from './utils';\n\nimport { LogDNABrowserOptions } from './logdna';\n\nconst validateOptions = (opts: LogDNABrowserOptions) => {\n  if (opts.ingestionKey == null) {\n    throw new Error('Ingestion key can not be undefined when calling init');\n  }\n\n  if (!opts.hostname || (opts.hostname && !utils.validateHostname(opts.hostname))) {\n    throw new Error(`LogDNA Browser Logger: \\`${opts.hostname || 'undefined'}\\` is not a valid hostname, see documentation for the \\`hostname\\` configuration option for details.`);\n  }\n\n  if (opts.sampleRate == null || opts.sampleRate < 0 || opts.sampleRate > 100 || isNaN(opts.sampleRate)) {\n    throw new Error(`LogDNA Browser Logger: \\`sampleRate\\` option must be a number between 0 and 100`);\n  }\n};\n\nexport { validateOptions };\n","import { getOptions } from './init';\nimport utils from './utils';\nimport { internalErrorLogger } from './capture';\nimport { LogDNALogLine } from './logdna';\nimport { FLUSH_BYTE_LIMIT, STARTING_BACK_OFF, MAX_BACK_OFF, MAX_FETCH_ERROR_RETRY, LOG_LINE_FLUSH_TIMEOUT } from './constants';\n\nlet buffer: LogDNALogLine[] = [];\nlet retryCount: number = 0;\nlet backOffInterval: number = 0;\nlet loggerError: boolean = false;\nlet timer: number | undefined;\n\nconst process = async (lines: LogDNALogLine | LogDNALogLine[]) => {\n  if (Array.isArray(lines)) {\n    buffer = buffer.concat(lines);\n  } else {\n    buffer.push(lines);\n  }\n\n  if (timer) {\n    clearTimeout(timer);\n  }\n\n  if (!isUnderByteLimit(buffer)) {\n    return await flush();\n  }\n\n  timer = setTimeout(async () => {\n    await flush();\n    timer = undefined;\n  }, timeout());\n};\n\nconst timeout = (): number | undefined => {\n  if (retryCount > 0) {\n    backOffInterval = utils.backOffWithJitter(STARTING_BACK_OFF, MAX_BACK_OFF, backOffInterval || STARTING_BACK_OFF);\n\n    return backOffInterval;\n  }\n\n  return getOptions().flushInterval || LOG_LINE_FLUSH_TIMEOUT;\n};\n\nconst splitAndFlush = async (logLines: LogDNALogLine[]) => {\n  const lines: LogDNALogLine[] = [...logLines];\n  const half: number = Math.floor(lines.length / 2);\n  const lines2: LogDNALogLine[] = lines.splice(half);\n\n  [lines, lines2].forEach(async block => await flush(block));\n};\n\nconst isUnderByteLimit = (buffer: LogDNALogLine[]) => utils.jsonByteSize(buffer) < FLUSH_BYTE_LIMIT;\n\nconst flush = async (lines?: LogDNALogLine[]) => {\n  if (!lines) {\n    lines = [...buffer];\n    buffer = [];\n  }\n\n  if (!lines.length) return;\n\n  if (isUnderByteLimit(lines)) {\n    await send(lines);\n  } else if (lines.length === 1) {\n    internalErrorLogger(`LogDNA Browser Logger was unable to send the previous log lines because the log size was greater than ${FLUSH_BYTE_LIMIT} bytes`);\n  } else {\n    await splitAndFlush(lines);\n  }\n};\n\nconst send = async (lines: LogDNALogLine[]) => {\n  const opts = getOptions();\n  if (loggerError) {\n    return;\n  }\n\n  const ingestUrlParams = new URLSearchParams([\n    // @ts-ignore\n    ['hostname', opts.hostname],\n    // @ts-ignore\n    ['now', `${Date.now()}`],\n    // @ts-ignore\n    ['tags', opts.tags],\n  ]);\n\n  const ingestUrl = `${opts.url}?${ingestUrlParams}`;\n  const errorMsg = 'Unable to send previous logs batch to LogDNA';\n\n  try {\n    const response = await fetch(ingestUrl, {\n      method: 'POST',\n      keepalive: true,\n      headers: {\n        Authorization: `Basic ${btoa(`${opts.ingestionKey}:`)}`,\n        'Content-Type': 'application/json',\n      },\n      body: utils.stringify({ lines }),\n    });\n\n    if (response.ok) {\n      retryCount = 0;\n      backOffInterval = 0;\n    } else {\n      if (response.status >= 400 && response.status < 500) {\n        internalErrorLogger(`${errorMsg}: ${response.statusText}`);\n      } else if (response.status >= 500) {\n        retryCount = retryCount + 1;\n        if (retryCount > MAX_FETCH_ERROR_RETRY) {\n          internalErrorLogger(`${errorMsg}: ${response.statusText}`);\n        } else {\n          await process(lines);\n        }\n      }\n    }\n  } catch (error) {\n    // If we have any issues sending logs shut down the service immediately\n    // This is to avoid ending up in a circular loop of error logs and causing app\n    // performance issues or ddos-ing out api.\n    loggerError = true;\n\n    internalErrorLogger(\n      `LogDNA Browser Logger is unable to send logs to LogDNA. \n      Possible issues:\n       - Your web apps url (${window.location.origin}) is not listed in your LogDNA account's CORS whitelist domains\n       - Ingestion key is incorrect\n       - The configured LogDNA ingestion url is incorrect\n       - LogDNA ingestion endpoint is down. https://status.mezmo.com/\n\n       Error: ${(error as Error).message}\n      `,\n    );\n  }\n};\n\nexport { process, flush };\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","import { detect } from 'detect-browser';\nimport { Context } from './logdna';\n\ntype LogDNABrowserInfo = {\n  version: string;\n};\n\ntype StaticContext = {\n  browser: LogDNABrowserInfo;\n};\n\nlet context: Context = {};\n\nconst addContext = (_context: Context) => {\n  context = _context;\n};\n\nconst getContext = () => context;\n\nconst getDynamicContext = () => ({\n  location: window.location,\n});\n\nconst getStaticContext = (): StaticContext | undefined => {\n  const browser = detect();\n\n  if (browser == null) {\n    return;\n  }\n\n  return {\n    browser: {\n      ...browser,\n      version: `${browser.name}-${browser.version}`,\n    },\n  };\n};\n\nexport { addContext, getContext, getStaticContext, getDynamicContext };\n","import utils from './utils';\nimport { SESSION_KEY } from './constants';\n\nimport { SessionId } from './logdna';\n\nlet sessionId: SessionId;\n\nconst hasSessionStorage = (): Boolean => utils.isBrowserStorageAvailable('sessionStorage');\n\n// taken from https://gist.github.com/jed/982883\nconst generate = (): string => {\n  return ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/1|0/g, function() {\n    return (0 | (Math.random() * 16)).toString(16);\n  });\n};\n\nconst init = () => {\n  if (!hasSessionStorage()) {\n    setSessionId(generate());\n  } else {\n    const storage = window.sessionStorage.getItem(SESSION_KEY);\n    sessionId = storage || generate();\n  }\n};\n\nconst setSessionId = (id: SessionId) => {\n  if (hasSessionStorage()) {\n    window.sessionStorage.setItem(SESSION_KEY, id);\n  }\n\n  sessionId = id;\n};\n\nconst getSessionId = (): SessionId => sessionId;\n\nexport { init, getSessionId, setSessionId };\n","// All messages run through here\nimport { isSendingDisabled, getOptions } from './init';\nimport { process } from './buffer-manager';\nimport utils from './utils';\nimport { getStaticContext, getContext, getDynamicContext } from './context-manager';\nimport { getSessionId } from './session-manager';\nimport { LogMessage } from './logdna';\n\nconst captureMessage = ({ level = 'log', message, lineContext = {} }: LogMessage) => {\n  if (isSendingDisabled()) return;\n\n  if (message instanceof Error) {\n    captureError(message);\n    return;\n  }\n\n  generateLogLine({ level, message, lineContext });\n};\n\nconst captureError = (error: any, isUnhandledRejection = false) => {\n  if (isSendingDisabled()) return;\n\n  let message = error.name ? `${error.name}: ${error.message}` : error.message;\n\n  if (isUnhandledRejection) {\n    message = `Uncaught (in promise) ${message}`;\n  }\n\n  generateLogLine({\n    level: 'error',\n    message,\n    errorContext: {\n      colno: error.columnNumber || error.colno || error.colNo,\n      lineno: error.lineNumber || error.lineno || error.lineNo,\n      stacktrace: error.stack || error.stacktrace,\n      source: error.fileName || error.source,\n    },\n    disableStacktrace: !!(error.stack || error.stacktrace), // Don't generate a second stacktrace for errors since they already have it\n  });\n};\n\nconst generateLogLine = ({ level = 'log', message, lineContext = {}, errorContext = null, disableStacktrace = false }: LogMessage) => {\n  const opts = getOptions();\n\n  // run the beforeSend hooks\n  const data: LogMessage = (getOptions().hooks || { beforeSend: [] }).beforeSend.reduce((acc: LogMessage, fn: Function) => (acc == null ? null : fn(acc)), {\n    level,\n    message,\n    lineContext,\n  });\n\n  // beforeSend stopped the log\n  if (data == null) {\n    return;\n  }\n\n  process({\n    timestamp: Math.floor(Date.now() / 1000),\n    app: opts.app || window.location.host,\n    line: typeof data.message === 'string' ? data.message : utils.stringify(data.message),\n    level: data.level,\n    meta: {\n      sessionId: getSessionId(),\n      ...getStaticContext(),\n      ...getDynamicContext(),\n      stacktrace: disableStacktrace || !opts.enableStacktrace ? undefined : utils.getStackTrace(),\n      context: { ...getContext() },\n      lineContext: data.lineContext,\n      errorContext,\n    },\n  });\n};\n\nconst internalErrorLogger = (...args: any[]) => {\n  if (utils.isFunction(getOptions().internalErrorLogger)) {\n    // @ts-ignore\n    getOptions().internalErrorLogger(...args);\n    return;\n  }\n  return utils.originalConsole.error(...args);\n};\n\nexport { captureError, captureMessage, internalErrorLogger };\n","import { captureMessage } from '../capture';\nimport { LogLevel, LineContext } from '../logdna';\nimport utils from '../utils';\nimport { getOptions } from '../init';\n\ndeclare module '../LogDNAMethods' {\n  interface LogDNAMethods {\n    log(message: any, context?: LineContext, level?: LogLevel): void;\n    error(message: any, context?: LineContext, level?: LogLevel): void;\n    warn(message: any, context?: LineContext, level?: LogLevel): void;\n    debug(message: any, context?: LineContext, level?: LogLevel): void;\n    info(message: any, context?: LineContext, level?: LogLevel): void;\n  }\n}\n\nconst log = (message: any, context?: LineContext, level: LogLevel = 'log') => {\n  captureMessage({\n    level,\n    message,\n    lineContext: context,\n  });\n\n  if (getOptions().debug) {\n    utils.originalConsole[level](...[message, context].filter(i => i !== undefined));\n  }\n};\n\nconst error = (message: any, context?: LineContext) => {\n  log(message, context, 'error');\n};\n\nconst warn = (message: any, context?: LineContext) => {\n  log(message, context, 'warn');\n};\n\nconst debug = (message: any, context?: LineContext) => {\n  log(message, context, 'debug');\n};\n\nconst info = (message: any, context?: LineContext) => {\n  log(message, context, 'info');\n};\n\nconst Logger = () => ({\n  name: 'LoggerPlugin',\n  methods() {\n    return {\n      log,\n      error,\n      warn,\n      info,\n      debug,\n    };\n  },\n});\n\nexport default Logger;\n","import { captureMessage } from '../capture';\nimport utils from '../utils';\n\nimport { Plugin, LogLevel } from '../logdna';\n\nexport type ConsolePlugin =\n  | {\n      integrations?: LogLevel[];\n    }\n  | undefined;\n\nconst DEFAULT_CONSOLE_METHODS: LogLevel[] = ['log', 'debug', 'error', 'warn', 'info'];\n\nconst DEFAULT_OPTIONS = {\n  integrations: DEFAULT_CONSOLE_METHODS,\n};\n\nconst Console = (opts: ConsolePlugin = DEFAULT_OPTIONS): Plugin => ({\n  name: 'ConsolePlugin',\n  init() {\n    const { integrations } = opts;\n\n    if (!Array.isArray(integrations)) {\n      throw new Error('LogDNA Browser Logger console integration types must be an array');\n    }\n\n    const { log, debug, error, warn, info } = window.console;\n    const _windowConsole = { log, debug, error, warn, info };\n\n    (integrations || [])\n      .map(method => method.toLowerCase())\n      .forEach(method => {\n        if (!DEFAULT_CONSOLE_METHODS.includes(method as LogLevel)) {\n          throw Error('LogDNA Browser Logger console plugin was passed an invalid console methods');\n        }\n\n        // @ts-ignore\n        window.console[method] = (...args) => {\n          captureMessage({\n            level: method as LogLevel,\n            message: args.length > 1 ? utils.stringify(args) : args[0],\n          });\n\n          // @ts-ignore\n          _windowConsole[method](...args);\n          return;\n        };\n      });\n  },\n});\n\nexport default Console;\n","import { captureError } from '../capture';\nimport { Plugin } from '../logdna';\n\nexport type GlobalErrorHandlerPlugin =\n  | {\n      enableErrorHandler?: boolean;\n      enableUnhandledPromiseRejection?: boolean;\n    }\n  | undefined;\n\nconst DEFAULT_OPTIONS = {\n  enableErrorHandler: true,\n  enableUnhandledPromiseRejection: true,\n};\n\nconst addGlobalError = () => {\n  window.addEventListener('error', onError);\n};\n\nconst addUnhandledrejection = () => {\n  window.addEventListener('unhandledrejection', onUnhandledRejection, {\n    capture: true,\n  });\n};\n\n/*  istanbul ignore next */\nconst onUnhandledRejection = (e: any) => {\n  let error: any = e.reason;\n  captureError(error, true);\n};\n\n/*  istanbul ignore next */\nconst onError = (error: ErrorEvent) => {\n  const e = error?.error ?? error ?? {};\n  captureError(e);\n};\n\nconst GlobalErrorHandler = (opts: GlobalErrorHandlerPlugin = DEFAULT_OPTIONS): Plugin => ({\n  name: 'GlobalErrorHandlerPlugin',\n  init() {\n    if (opts.enableErrorHandler) {\n      addGlobalError();\n    }\n\n    if (opts.enableUnhandledPromiseRejection) {\n      addUnhandledrejection();\n    }\n  },\n});\n\nexport default GlobalErrorHandler;\n","import { isInitiated } from './init';\nimport Logger from './plugins/logger';\nimport Console, { ConsolePlugin } from './plugins/console';\nimport GlobalErrorHandler, { GlobalErrorHandlerPlugin } from './plugins/global-handler';\nimport { internalErrorLogger } from './capture';\nimport utils from './utils';\nimport { LogDNABrowserOptions } from './logdna';\nimport { LogDNAMethods } from './LogDNAMethods';\n\ntype InstalledPlugins = string[];\n\nconst installedPlugins: InstalledPlugins = [];\n\nexport const addPluginMethods = (options: LogDNABrowserOptions) => {\n  if (!Array.isArray(options.plugins)) return;\n\n  options.plugins.forEach(p => {\n    if (!utils.isFunction(p.methods)) return;\n\n    // @ts-ignore\n    const plugin = p.methods();\n    Object.keys(plugin).forEach(m => {\n      // @ts-ignore\n      LogDNAMethods.prototype[m] = (...args: any) => {\n        if (!isInitiated()) return;\n\n        /* istanbul ignore next */\n        plugin[m](...args);\n      };\n    });\n  });\n};\n\nexport const initPlugins = (options: LogDNABrowserOptions) => {\n  if (!Array.isArray(options.plugins)) return;\n\n  options.plugins.forEach(p => {\n    if (utils.isFunction(p.init)) {\n      try {\n        // @ts-ignore\n        p.init();\n        installedPlugins.push(p.name);\n      } catch (error) {\n        /* istanbul ignore next */\n        internalErrorLogger(`There was an issue initializing the ${p.name} plugin`);\n        internalErrorLogger(error);\n      }\n    }\n\n    if (p.hooks && options.hooks) {\n      if (utils.isFunction(p.hooks.beforeSend)) {\n        options.hooks.beforeSend.push(p.hooks.beforeSend);\n\n        if (!installedPlugins.includes(p.name)) {\n          installedPlugins.push(p.name);\n        }\n      }\n    }\n  });\n};\n\nexport const addDefaultPlugins = (options: LogDNABrowserOptions) => {\n  const { console: consoleOpts, globalErrorHandlers } = options;\n  if (!options.plugins) {\n    options.plugins = [];\n  }\n\n  /* istanbul ignore next */\n  if (consoleOpts === true || (typeof consoleOpts === 'object' && consoleOpts.enable !== false)) {\n    const consoleOptions: ConsolePlugin = typeof consoleOpts === 'object' ? { integrations: consoleOpts.integrations } : undefined;\n    options.plugins.push(Console(consoleOptions));\n  }\n\n  if (globalErrorHandlers) {\n    /* istanbul ignore next */\n    const errorHandlerOptions: GlobalErrorHandlerPlugin = typeof globalErrorHandlers === 'object' ? globalErrorHandlers : undefined;\n    options.plugins.push(GlobalErrorHandler(errorHandlerOptions));\n  }\n\n  // Always add logger methods\n  options.plugins.push(Logger());\n};\n\nexport const getInstalledPlugins = () => installedPlugins;\n","/**\n * Version will get injected post build and pre npm\n */\nconst version = '{{{INJECT_VERSION}}}';\n\nexport const getVersion = () => version;\n","import { getContext } from './context-manager';\nimport { getOptions } from './init';\nimport { getInstalledPlugins } from './plugin-manager';\nimport { getSessionId } from './session-manager';\nimport { getVersion } from './version';\n\ntype LogDNAWindow = {\n  version: string;\n  getContext: Function;\n  getOptions: Function;\n  getInstalledPlugins: Function;\n  getSessionId: Function;\n};\n\ndeclare global {\n  interface Window {\n    __LOGDNA__: LogDNAWindow;\n  }\n}\n\nexport const addDebugInfo = () => {\n  if (typeof window !== 'undefined') {\n    window.__LOGDNA__ = window.__LOGDNA__ || {\n      version: getVersion(),\n      getContext,\n      getOptions,\n      getInstalledPlugins,\n      getSessionId,\n    };\n  }\n};\n","import { DEFAULT_CONFIG, LOG_LINE_FLUSH_TIMEOUT } from './constants';\nimport { validateOptions } from './validation';\nimport { addPluginMethods, initPlugins, addDefaultPlugins } from './plugin-manager';\nimport utils from './utils';\nimport { flush } from './buffer-manager';\nimport { init as sessionManagerInit } from './session-manager';\nimport { addDebugInfo } from './debug-info';\n\nimport { LogDNABrowserOptions } from './logdna';\n\nimport { LogDNAMethods } from './LogDNAMethods';\n\nlet options: LogDNABrowserOptions = DEFAULT_CONFIG;\n\nlet isConfigCompleted = false;\nlet isInitCompleted = false;\nlet sampleRate: number;\nlet methods: LogDNAMethods = new LogDNAMethods();\n\nconst config = (ingestionKey: string, opts: LogDNABrowserOptions = DEFAULT_CONFIG) => {\n  options = Object.assign(DEFAULT_CONFIG, opts);\n  options.ingestionKey = ingestionKey;\n  options.tags = utils.parseTags(opts.tags);\n  options.flushInterval =\n    options.flushInterval == null || isNaN(options.flushInterval) || options.flushInterval < LOG_LINE_FLUSH_TIMEOUT ? LOG_LINE_FLUSH_TIMEOUT : options.flushInterval;\n\n  validateOptions(options);\n  addDefaultPlugins(options);\n  addPluginMethods(options);\n\n  isConfigCompleted = true;\n};\n\nconst init = (ingestionKey: string, opts: LogDNABrowserOptions = DEFAULT_CONFIG) => {\n  if (ingestionKey) {\n    config(ingestionKey, opts);\n  }\n\n  if (opts.disabled) {\n    return;\n  }\n\n  utils.cacheConsole();\n  sampleRate = utils.generateSampleRateScore();\n  initPlugins(options);\n  addFlushEvents();\n  sessionManagerInit();\n  addDebugInfo();\n\n  isInitCompleted = true;\n};\n\nconst getOptions = (): LogDNABrowserOptions => options;\nconst isConfigured = (): Boolean => isConfigCompleted;\nconst isInitiated = (): Boolean => isInitCompleted;\n\nconst isSendingDisabled = (): Boolean => options.disabled || !utils.includeInSampleRate(options.sampleRate, sampleRate);\n\nconst addFlushEvents = () => {\n  /* istanbul ignore next */\n  document.addEventListener('visibilitychange', async () => {\n    if (document.visibilityState === 'hidden') {\n      flush();\n    }\n  });\n\n  // for safari\n  /* istanbul ignore next */\n  window.addEventListener('beforeunload', async () => {\n    flush();\n  });\n};\n\nexport { config, init, getOptions, isSendingDisabled, isConfigured, isInitiated, methods };\n","import { captureMessage } from '../capture';\nconst NAMESPACE = 'logdna:';\n\nimport { LogLevel } from '../logdna';\n\ntype MetricPlugin = {\n  prefix: string;\n  logLevel: LogLevel;\n};\n\nconst DEFAULT_OPTIONS: MetricPlugin = {\n  prefix: 'Performance Measurement',\n  logLevel: 'debug',\n};\n\nconst mark = (name: string) => {\n  performance.mark(`${NAMESPACE}${name}`);\n};\n\nconst measure = (name: string, start: string, end: string) => {\n  if (end) {\n    end = `${NAMESPACE}${end}`;\n  }\n\n  try {\n    performance.measure(`${NAMESPACE}${name}`, `${NAMESPACE}${start}`);\n  } catch (error) {\n    console.debug('`logdna.measure()` was called with an invalid or missing `mark`.', error);\n  }\n};\n\nconst Metrics = (opts: MetricPlugin = DEFAULT_OPTIONS) => ({\n  name: 'MetricsPlugin',\n  init() {\n    const options = { ...DEFAULT_OPTIONS, ...opts };\n\n    if ('performance' in window === false || 'PerformanceObserver' in window === false) {\n      console.warn(`LogDNA Browser Logger cannot initialize ${this.name}. This browser doesn't support \\`performance\\` or \\`PerformanceObserver\\`.`);\n      return;\n    }\n\n    const observer = new window.PerformanceObserver(items => {\n      items.getEntries().forEach(item => {\n        if (!item.name.startsWith(NAMESPACE)) {\n          return;\n        }\n        const name = item.name.replace(NAMESPACE, '');\n        const { prefix, logLevel = 'debug' } = options;\n        const prefixMsg = prefix ? `${options.prefix}: ` : '';\n\n        captureMessage({\n          level: logLevel,\n          message: `${prefixMsg}${name} took ${Math.floor(item.duration)}ms`,\n          lineContext: {\n            performanceMeasurement: {\n              duration: item.duration,\n              name,\n              entryTypes: item.entryType,\n              startTime: item.startTime,\n            },\n          },\n        });\n      });\n    });\n\n    observer.observe({ entryTypes: ['measure'] });\n  },\n  methods() {\n    return { mark, measure };\n  },\n});\n\nexport default Metrics;\n","import { LogMessage } from '../logdna';\n\nconst SSN = () => ({\n  name: 'SSNFilterPlugin',\n  hooks: {\n    beforeSend: ({ level, message, lineContext }: LogMessage) => {\n      if (typeof message === 'string') {\n        message = message.replace(/\\d{3}-\\d{2}-\\d{4}/g, 'XXX-XX-XXXX');\n      }\n      return {\n        level,\n        message,\n        lineContext,\n      };\n    },\n  },\n});\n\nexport default SSN;\n","import Metrics from './metrics';\nimport SSNFilter from './ssn-filter';\n\nexport default {\n  Metrics,\n  SSNFilter,\n};\n","import { LogDNAMethods } from './LogDNAMethods';\n\nimport { init, config, methods } from './init';\nimport plugins from './plugins';\nimport { addContext } from './context-manager';\nimport { setSessionId } from './session-manager';\n\nLogDNAMethods.prototype.init = init;\nLogDNAMethods.prototype.config = config;\nLogDNAMethods.prototype.addContext = addContext;\nLogDNAMethods.prototype.setSessionId = setSessionId;\nLogDNAMethods.prototype.plugins = plugins;\n\nexport default methods;\n"],"names":["stringify","__spreadArray","safeStringify","process","this","init","DEFAULT_OPTIONS","sessionManagerInit","SSNFilter"],"mappings":"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"}